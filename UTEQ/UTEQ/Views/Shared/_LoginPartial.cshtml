@using Microsoft.AspNetCore.Identity

@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager



<ul class="navbar-nav">


    <div class="navbar-collapse collapse d-sm-inline-flex justify-content-between flex-row-reverse">



    @if (User.IsInRole(ED.ClienteRole))
    {

        <li class="nav-item dropdown">
            <a class="nav-link text-white dropdown-toggle" href="#" id="navbarDropdown" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                Contenido
            </a>
            <ul class="dropdown-menu">

                <li><a class="nav-link " asp-area="" asp-controller="Formulario" asp-action="Crear">Formulario</a></li>


            </ul>
        </li>

    }

    </div>



@if (SignInManager.IsSignedIn(User))
{
    <li class="nav-item">
        <a id="manage" class="nav-link text-white" asp-area="" asp-page="" title="Manage">Hola @UserManager.GetUserName(User)!</a>
    </li>
    <li class="nav-item">
        <form id="logoutForm" class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
            <button id="logout" type="submit" class="nav-link btn btn-link text-white">Salir</button>
        </form>
    </li>
}
else
{
    <li class="nav-item">
        <a class="nav-link text-white" id="register" asp-area="Identity" asp-page="/Account/Register">Registrar</a>
    </li>
    <li class="nav-item">
        <a class="nav-link text-white" id="login" asp-area="Identity" asp-page="/Account/Login">Login</a>
    </li>
}
</ul>
